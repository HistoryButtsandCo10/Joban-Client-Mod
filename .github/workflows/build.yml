# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [ pull_request, push ]

jobs:
  build:
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Setup 1.16.5
        run: ./gradlew setupLibrary -PbuildVersion="1.16.5"
      - name: Build 1.16 Fabric
        run: ./gradlew fabric:build -PbuildVersion="1.16.5"
      - name: Build 1.16 Forge
        run: ./gradlew forge:build -PbuildVersion="1.16.5"
      - name: Setup 1.17.1
        run: ./gradlew setupLibrary -PbuildVersion="1.17.1"
      - name: Build 1.17 Fabric
        run: ./gradlew fabric:build -PbuildVersion="1.17.1"
      - name: Build 1.17 Forge
        run: ./gradlew forge:build -PbuildVersion="1.17.1"
      - name: Setup 1.18
        run: ./gradlew setupLibrary -PbuildVersion="1.18.2"
      - name: Build 1.18 Fabric
        run: ./gradlew fabric:build -PbuildVersion="1.18.2"
      - name: Build 1.18 Forge
        run: ./gradlew forge:build -PbuildVersion="1.18.2"
      - name: Capture Fabric build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts Fabric
          path: fabric/build/libs/
      - name: Capture Forge build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts Forge
          path: forge/build/libs/
