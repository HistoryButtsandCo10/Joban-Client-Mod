package com.jsblock;

import com.jsblock.blocks.*;
import mtr.RegistryObject;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;


public interface Blocks {
	RegistryObject<Block> AUTO_IRON_DOOR =new RegistryObject<>(()-> new AutoDoor(BlockBehaviour.Properties.copy(net.minecraft.world.level.block.Blocks.IRON_DOOR)));
	RegistryObject<Block> BUTTERFLY_LIGHT =new RegistryObject<>(()-> new ButterflyLight(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(3.0f).lightLevel(state -> 4)));
	RegistryObject<Block> BUFFERSTOP_1 =new RegistryObject<>(()-> new Bufferstop1(BlockBehaviour.Properties.of(Material.METAL).strength(4.0f).lightLevel(state -> 15).noOcclusion()));
	RegistryObject<Block> CIRCLE_WALL_1 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> CIRCLE_WALL_2 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> CIRCLE_WALL_3 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> CIRCLE_WALL_4 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> CIRCLE_WALL_5 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> CIRCLE_WALL_6 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> CIRCLE_WALL_7 =new RegistryObject<>(CircleWall::new);
	RegistryObject<Block> DEPARTURE_POLE =new RegistryObject<>(()-> new DeparturePole(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(3.0f).noOcclusion()));
	RegistryObject<Block> DEPARTURE_TIMER =new RegistryObject<>(()-> new DepartureTimer(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(3.0f)));
	RegistryObject<Block> SIGNAL_LIGHT_RED_1 =new RegistryObject<>(()-> new SignalLightRed1(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(1.0f)));
	RegistryObject<Block> SIGNAL_LIGHT_RED_2 =new RegistryObject<>(()-> new SignalLightRed2(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(1.0f)));
	RegistryObject<Block> SIGNAL_LIGHT_BLUE =new RegistryObject<>(()-> new SignalLightBlue(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(1.0f)));
	RegistryObject<Block> SIGNAL_LIGHT_GREEN =new RegistryObject<>(()-> new SignalLightGreen(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(1.0f)));
	RegistryObject<Block> SIGNAL_LIGHT_INVERTED_1 =new RegistryObject<>(()-> new SignalLightInverted1(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(1.0f)));
	RegistryObject<Block> SIGNAL_LIGHT_INVERTED_2 =new RegistryObject<>(()-> new SignalLightInverted2(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(1.0f)));
	RegistryObject<Block> SOUND_LOOPER =new RegistryObject<>(()-> new SoundLooper(BlockBehaviour.Properties.copy(net.minecraft.world.level.block.Blocks.SMOOTH_SANDSTONE)));
	RegistryObject<Block> CEILING_1 =new RegistryObject<>(()-> new Ceiling1(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).noOcclusion()));
	RegistryObject<Block> ENQUIRY_MACHINE_1 =new RegistryObject<>(()-> new EnquiryMachine1(BlockBehaviour.Properties.of(Material.METAL).strength(4.0f)));
	RegistryObject<Block> ENQUIRY_MACHINE_2 =new RegistryObject<>(()-> new EnquiryMachine1(BlockBehaviour.Properties.of(Material.METAL).strength(4.0f)));
	RegistryObject<Block> EMG_STOP_1 =new RegistryObject<>(()-> new EmgStop1(BlockBehaviour.Properties.of(Material.METAL).strength(1.0f)));
	RegistryObject<Block> EXIT_SIGN_1O =new RegistryObject<>(()-> new ExitSign1o(BlockBehaviour.Properties.of(Material.METAL).strength(1.5f).lightLevel(state -> 10)));
	RegistryObject<Block> EXIT_SIGN_1E =new RegistryObject<>(()-> new ExitSign1e(BlockBehaviour.Properties.of(Material.METAL).strength(1.5f).lightLevel(state -> 10)));
	RegistryObject<Block> HELPLINE_1 =new RegistryObject<>(()-> new HelpLine1(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f)));
	RegistryObject<Block> HELPLINE_2 =new RegistryObject<>(()-> new HelpLine2(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f)));
	RegistryObject<Block> HELPLINE_3 =new RegistryObject<>(()-> new HelpLine3(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).noOcclusion()));
	RegistryObject<Block> HELPLINE_4 =new RegistryObject<>(()-> new HelpLine4(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).noOcclusion()));
	RegistryObject<Block> HELPLINE_5 =new RegistryObject<>(()-> new HelpLine5(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).lightLevel(state -> 15).noOcclusion()));
	RegistryObject<Block> HELPLINE_6 =new RegistryObject<>(()-> new HelpLine6(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).lightLevel(state -> 15).noOcclusion()));
	RegistryObject<Block> KCR_NAME_SIGN =new RegistryObject<>(()-> new KCRNameSign(BlockBehaviour.Properties.of(Material.METAL).strength(5.0f).lightLevel(state -> 15).noOcclusion()));
	RegistryObject<Block> KCR_EMG_STOP_SIGN =new RegistryObject<>(()-> new KCREmgStopSign(BlockBehaviour.Properties.of(Material.METAL).strength(3.0f).noOcclusion()));
	RegistryObject<Block> LIGHT_1 =new RegistryObject<>(()-> new Light1(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).lightLevel(state -> 15)));
	RegistryObject<Block> LIGHT_2 =new RegistryObject<>(()-> new Light2(BlockBehaviour.Properties.of(Material.METAL).strength(2.0f).lightLevel(state -> 15)));
	RegistryObject<Block> LIGHT_BLOCK =new RegistryObject<>(()-> new LightBlock(BlockBehaviour.Properties.of(Material.METAL).strength(1.0f).lightLevel(state -> 15).noOcclusion()));
	RegistryObject<Block> OP_BUTTONS =new RegistryObject<>(()-> new OpOnlyButton(BlockBehaviour.Properties.of(Material.METAL).strength(1.0f).lightLevel(state -> 15).noOcclusion()));
	RegistryObject<Block> PIDS_1A =new RegistryObject<>(PIDS1A::new);
	RegistryObject<Block> PIDS_4 =new RegistryObject<>(PIDS4::new);
	RegistryObject<Block> PIDS_RV_TCL =new RegistryObject<>(PIDSRV::new);
	RegistryObject<Block> PIDS_RV_SIL =new RegistryObject<>(PIDSRVSIL::new);
	RegistryObject<Block> MODEL_E44 =new RegistryObject<>(()-> new ModelE44(BlockBehaviour.Properties.of(Material.METAL).strength(0.5f).noOcclusion()));
	RegistryObject<Block> RV_PIDS_POLE =new RegistryObject<>(()-> new RVPIDSPole(BlockBehaviour.Properties.of(Material.METAL).strength(1.0f).noOcclusion()));
	RegistryObject<Block> STATION_NAME_TALL_STAND =new RegistryObject<>(StationNameTallStand::new);
	RegistryObject<Block> SUBSIDY_MACHINE_1 =new RegistryObject<>(()-> new SubsidyMachine1(BlockBehaviour.Properties.of(Material.METAL).strength(4.0f)));
	RegistryObject<Block> TICKET_BARRIER_1_ENTRANCE =new RegistryObject<>(()-> new ThalesTicketBarrier(true));
	RegistryObject<Block> TICKET_BARRIER_1_EXIT =new RegistryObject<>(()-> new ThalesTicketBarrier(false));
	RegistryObject<Block> TICKET_BARRIER_1_DECOR =new RegistryObject<>(ThalesTicketBarrierDecor::new);
	RegistryObject<Block> TRESPASS_SIGN_1 =new RegistryObject<>(()-> new TrespassSign1(BlockBehaviour.Properties.of(Material.METAL).strength(1.5f).noOcclusion()));
	RegistryObject<Block> TRESPASS_SIGN_2 =new RegistryObject<>(()-> new TrespassSign2(BlockBehaviour.Properties.of(Material.METAL).strength(1.0f).noOcclusion()));
	RegistryObject<Block> WATER_MACHINE_1 =new RegistryObject<>(()-> new WaterMachine1(BlockBehaviour.Properties.of(Material.METAL).strength(4.0f)));
}